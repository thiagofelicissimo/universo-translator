exp : sttfa.eta (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)).

exp_body : sttfa.eta (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)).

axiom_exp :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) =>
        sttfa.forall
          nat.nat
          (m:(sttfa.eta nat.nat) =>
           connectives.equal nat.nat (exp n m) (nat.filter_nat_type nat.nat (exp_body n) m)))).

def eq_exp :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) =>
        sttfa.forall
          nat.nat
          (m:(sttfa.eta nat.nat) =>
           leibniz.leibniz nat.nat (exp n m) (nat.filter_nat_type nat.nat (exp_body n) m))))
  :=
  n:(sttfa.eta nat.nat) =>
  m:(sttfa.eta nat.nat) =>
  connectives.equal_leibniz
    nat.nat
    (exp n m)
    (nat.filter_nat_type nat.nat (exp_body n) m)
    (axiom_exp n m).

def sym_eq_exp :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) =>
        sttfa.forall
          nat.nat
          (m:(sttfa.eta nat.nat) =>
           leibniz.leibniz nat.nat (nat.filter_nat_type nat.nat (exp_body n) m) (exp n m))))
  :=
  n:(sttfa.eta nat.nat) =>
  m:(sttfa.eta nat.nat) =>
  leibniz.sym_leibniz nat.nat (exp n m) (nat.filter_nat_type nat.nat (exp_body n) m) (eq_exp n m).

axiom_exp_body_O :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) => connectives.equal nat.nat (exp_body n nat.O) (nat.S nat.O))).

def eq_exp_body_O :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) => leibniz.leibniz nat.nat (exp_body n nat.O) (nat.S nat.O)))
  :=
  n:(sttfa.eta nat.nat) =>
  connectives.equal_leibniz nat.nat (exp_body n nat.O) (nat.S nat.O) (axiom_exp_body_O n).

def sym_eq_exp_body_O :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) => leibniz.leibniz nat.nat (nat.S nat.O) (exp_body n nat.O)))
  :=
  n:(sttfa.eta nat.nat) =>
  leibniz.sym_leibniz nat.nat (exp_body n nat.O) (nat.S nat.O) (eq_exp_body_O n).

axiom_exp_body_S :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) =>
        sttfa.forall
          nat.nat
          (m:(sttfa.eta nat.nat) =>
           connectives.equal nat.nat (exp_body n (nat.S m)) (nat.times (exp n m) n)))).

def eq_exp_body_S :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) =>
        sttfa.forall
          nat.nat
          (m:(sttfa.eta nat.nat) =>
           leibniz.leibniz nat.nat (exp_body n (nat.S m)) (nat.times (exp n m) n))))
  :=
  n:(sttfa.eta nat.nat) =>
  m:(sttfa.eta nat.nat) =>
  connectives.equal_leibniz
    nat.nat
    (exp_body n (nat.S m))
    (nat.times (exp n m) n)
    (axiom_exp_body_S n m).

def sym_eq_exp_body_S :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) =>
        sttfa.forall
          nat.nat
          (m:(sttfa.eta nat.nat) =>
           leibniz.leibniz nat.nat (nat.times (exp n m) n) (exp_body n (nat.S m)))))
  :=
  n:(sttfa.eta nat.nat) =>
  m:(sttfa.eta nat.nat) =>
  leibniz.sym_leibniz nat.nat (exp_body n (nat.S m)) (nat.times (exp n m) n) (eq_exp_body_S n m).

def lt_O_exp :
  sttfa.eps
    (sttfa.forall
       nat.nat
       (n:(sttfa.eta nat.nat) =>
        sttfa.forall
          nat.nat
          (m:(sttfa.eta nat.nat) => sttfa.impl (nat.lt nat.O n) (nat.lt nat.O (exp n m)))))
  :=
  n:(sttfa.eta nat.nat) =>
  m:(sttfa.eta nat.nat) =>
  nat.nat_ind
    (_x_365:(sttfa.eta nat.nat) => sttfa.impl (nat.lt nat.O n) (nat.lt nat.O (exp n _x_365)))
    (sym_eq_exp
       n
       nat.O
       (y:(sttfa.eta nat.nat) => sttfa.impl (nat.lt nat.O n) (nat.lt nat.O y))
       (nat.sym_eq_filter_nat_type_O
          nat.nat
          (exp_body n)
          (y:(sttfa.eta nat.nat) => sttfa.impl (nat.lt nat.O n) (nat.lt nat.O y))
          (sym_eq_exp_body_O
             n
             (y:(sttfa.eta nat.nat) => sttfa.impl (nat.lt nat.O n) (nat.lt nat.O y))
             (auto:(sttfa.eps (nat.le (nat.S nat.O) n)) => nat.lt_O_S nat.O))))
    (a:(sttfa.eta nat.nat) =>
     sym_eq_exp
       n
       (nat.S a)
       (y:(sttfa.eta nat.nat) =>
        sttfa.impl
          (sttfa.impl (nat.lt nat.O n) (nat.lt nat.O (exp n a)))
          (sttfa.impl (nat.lt nat.O n) (nat.lt nat.O y)))
       (nat.sym_eq_filter_nat_type_S
          nat.nat
          (exp_body n)
          a
          (y:(sttfa.eta nat.nat) =>
           sttfa.impl
             (sttfa.impl (nat.lt nat.O n) (nat.lt nat.O (exp n a)))
             (sttfa.impl (nat.lt nat.O n) (nat.lt nat.O y)))
          (sym_eq_exp_body_S
             n
             a
             (y:(sttfa.eta nat.nat) =>
              sttfa.impl
                (sttfa.impl (nat.lt nat.O n) (nat.lt nat.O (exp n a)))
                (sttfa.impl (nat.lt nat.O n) (nat.lt nat.O y)))
             (Hind:(sttfa.eps
                      (sttfa.impl (nat.le (nat.S nat.O) n) (nat.le (nat.S nat.O) (exp n a)))) =>
              posn:(sttfa.eps (nat.le (nat.S nat.O) n)) =>
              nat.eq_times_body_O
                (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                 nat.le (nat.S (y (nat.S nat.O))) (nat.times (exp n a) n))
                (nat.eq_filter_nat_type_O
                   (sttfa.arrow nat.nat nat.nat)
                   nat.times_body
                   (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                    nat.le (nat.S (y (nat.S nat.O))) (nat.times (exp n a) n))
                   (nat.eq_times
                      nat.O
                      (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                       nat.le (nat.S (y (nat.S nat.O))) (nat.times (exp n a) n))
                      (nat.eq_plus_body_O
                         (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                          nat.le
                            (nat.S (y (nat.times nat.O (nat.S nat.O))))
                            (nat.times (exp n a) n))
                         (nat.eq_filter_nat_type_O
                            (sttfa.arrow nat.nat nat.nat)
                            nat.plus_body
                            (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                             nat.le
                               (nat.S (y (nat.times nat.O (nat.S nat.O))))
                               (nat.times (exp n a) n))
                            (nat.eq_plus
                               nat.O
                               (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                                nat.le
                                  (nat.S (y (nat.times nat.O (nat.S nat.O))))
                                  (nat.times (exp n a) n))
                               (nat.eq_plus_body_S
                                  nat.O
                                  (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                                   nat.le
                                     (y (nat.times nat.O (nat.S nat.O)))
                                     (nat.times (exp n a) n))
                                  (nat.eq_filter_nat_type_S
                                     (sttfa.arrow nat.nat nat.nat)
                                     nat.plus_body
                                     nat.O
                                     (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                                      nat.le
                                        (y (nat.times nat.O (nat.S nat.O)))
                                        (nat.times (exp n a) n))
                                     (nat.eq_plus
                                        (nat.S nat.O)
                                        (y:(sttfa.eta (sttfa.arrow nat.nat nat.nat)) =>
                                         nat.le
                                           (y (nat.times nat.O (nat.S nat.O)))
                                           (nat.times (exp n a) n))
                                        (nat.eq_times_body_S
                                           nat.O
                                           (y:(sttfa.eta
                                                 (sttfa.arrow nat.nat nat.nat)) =>
                                            nat.le
                                              (y (nat.S nat.O))
                                              (nat.times (exp n a) n))
                                           (nat.eq_filter_nat_type_S
                                              (sttfa.arrow nat.nat nat.nat)
                                              nat.times_body
                                              nat.O
                                              (y:(sttfa.eta
                                                    (sttfa.arrow nat.nat nat.nat)) =>
                                               nat.le
                                                 (y (nat.S nat.O))
                                                 (nat.times (exp n a) n))
                                              (nat.eq_times
                                                 (nat.S nat.O)
                                                 (y:(sttfa.eta
                                                       (sttfa.arrow
                                                          nat.nat
                                                          nat.nat)) =>
                                                  nat.le
                                                    (y (nat.S nat.O))
                                                    (nat.times (exp n a) n))
                                                 (nat.le_times
                                                    (nat.S nat.O)
                                                    (exp n a)
                                                    (nat.S nat.O)
                                                    n
                                                    (Hind posn)
                                                    posn))))))))))))))))
    m.

